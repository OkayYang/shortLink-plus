# Nginx 主配置文件
user nginx;
worker_processes auto;
pid /var/run/nginx.pid;

# 错误日志
error_log /var/log/nginx/error.log warn;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # 基础配置
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # 日志格式 - 短链接专用格式
    log_format shortlink '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for" '
                        'rt=$request_time target="$upstream_addr" '
                        'shortcode="$uri"';

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    # 访问日志
    access_log /var/log/nginx/access.log main;

    # 性能优化
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 100M;

    # Gzip压缩
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/wasm;

    # 隐藏 Nginx 版本
    server_tokens off;

    # 安全头
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options nosniff always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # 上游服务配置
    upstream shortlink_gateway {
        server gateway:8080;
        keepalive 32;
    }

    upstream shortlink_system {
        server system:9002;
        keepalive 32;
    }

    # HTTP 重定向到 HTTPS
    server {
        listen 80;
        server_name ywenrou.cn www.ywenrou.cn;

        # 其他请求重定向到 HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS 主站配置
    server {
        listen 443 ssl http2;
        server_name ywenrou.cn www.ywenrou.cn;

        # SSL 证书配置 - 您上传证书到这里
        ssl_certificate     /etc/nginx/ssl/ywenrou.cn_bundle.pem;
        ssl_certificate_key /etc/nginx/ssl/ywenrou.cn.key;
        ssl_trusted_certificate /etc/nginx/ssl/ywenrou.cn_bundle.crt;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384';
        # 前端静态文件服务 - 您的 dist 目录
        location / {
            root /home/shortlink/dist;
            index index.html;
            try_files $uri $uri/ /index.html;

            # SPA 路由支持
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                access_log off;
            }
        }

        # 代理到网关
        location /v1/ {
            proxy_pass http://shortlink_gateway/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port $server_port;

            # 超时配置
            proxy_connect_timeout 30s;
            proxy_send_timeout 30s;
            proxy_read_timeout 30s;

            # 缓冲配置
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
        }


        # RocketMQ 控制台代理
        location /rocketmq/ {
            proxy_pass http://rocketmq-console:8180/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # 健康检查
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }


        # 静态资源缓存
        location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            access_log off;
        }

        # 安全配置 - 拒绝访问敏感文件
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }

        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }

    # 短链接域名专用配置（如果有独立的短链接域名）
    server {
        listen 443 ssl http2;
        server_name s.ywenrou.cn;  # 短链接专用域名

        # SSL 证书配置 - 可以和主域名使用同一个证书
        ssl_certificate /etc/nginx/ssl/s.ywenrou.cn_bundle.pem;
        ssl_certificate_key /etc/nginx/ssl/s.ywenrou.cn.key;
        ssl_trusted_certificate /etc/nginx/ssl/s.ywenrou.cn_bundle.crt;

        # SSL 优化配置
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4;
        ssl_prefer_server_ciphers on;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # 短链接专用域名只处理跳转
        location ~ "^/([a-zA-Z0-9]{6,12})$" {
            access_log /var/log/nginx/shortlink_access.log shortlink;

            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header Host $host;
            proxy_set_header User-Agent $http_user_agent;

            proxy_pass http://shortlink_system/short-link/redirect/$1;
            proxy_redirect off;
            proxy_intercept_errors on;
            proxy_buffering off;

            proxy_connect_timeout 2s;
            proxy_send_timeout 2s;
            proxy_read_timeout 2s;

            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # 根路径重定向到主站
        location = / {
            return 301 https://ywenrou.cn/;
        }

        # 其他路径返回 404
        location / {
            return 404;
        }
    }
}
