version: '3.8'

services:
  # MySQL服务
  mysql:
    image: mysql:8.0
    container_name: shortlink-mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ncu_inventory
      MYSQL_DATABASE: shortlink
    volumes:
      - ./mysql/data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    ports:
      - "3306:3306"
    networks:
      - shortlink-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 5s
      timeout: 5s
      retries: 20

  # Redis服务
  redis:
    image: redis:6.2
    container_name: shortlink-redis
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redis/data:/data
    command: redis-server --appendonly yes
    networks:
      - shortlink-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 20

  # Nacos服务
  nacos:
    build:
      context: ./nacos
      dockerfile: Dockerfile
    image: shortlink-nacos:latest
    container_name: shortlink-nacos
    restart: always
    environment:
      - MODE=standalone
    ports:
      - "8848:8848"
      - "9848:9848"
      - "9849:9849"
    volumes:
      - ./nacos/logs:/home/nacos/logs
      - ./nacos/data:/home/nacos/data
    networks:
      - shortlink-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/"]
      interval: 5s
      timeout: 5s
      retries: 20

  # 网关服务
  gateway:
    image: shortlink-gateway:latest
    container_name: shortlink-gateway
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      nacos:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - ./gateway/logs:/app/logs
    networks:
      - shortlink-network

  # 认证服务
  auth:
    image: shortlink-auth:latest
    container_name: shortlink-auth
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      nacos:
        condition: service_healthy
    ports:
      - "9200:9200"
    volumes:
      - ./auth/logs:/app/logs
    networks:
      - shortlink-network

  # 控制台服务
  console:
    image: shortlink-console:latest
    container_name: shortlink-console
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      nacos:
        condition: service_healthy
      gateway:
        condition: service_started
    ports:
      - "9001:9001"
    volumes:
      - ./console/logs:/app/logs
    networks:
      - shortlink-network

  # 系统服务
  system:
    image: shortlink-system:latest
    container_name: shortlink-system
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      nacos:
        condition: service_healthy
      gateway:
        condition: service_started
      rocketmq:
        condition: service_started
      rocketmq-broker:
        condition: service_started
    ports:
      - "9002:9002"
    volumes:
      - ./system/logs:/app/logs
    networks:
      - shortlink-network
  # RocketMQ NameServer
  rocketmq:
    image: apache/rocketmq:5.3.2
    container_name: shortlink-rocketmq
    restart: always
    command: sh mqnamesrv
    environment:
      - JAVA_OPT_EXT=-Xms256m -Xmx256m
    ports:
      - "9876:9876"
    volumes:
      - ./rocketmq/namesrv/logs:/home/rocketmq/logs
      - ./rocketmq/namesrv/store:/home/rocketmq/store
    networks:
      - shortlink-network
    deploy:
      resources:
        limits:
          memory: 300m
        reservations:
          memory: 256m

  # RocketMQ Broker
  rocketmq-broker:
    image: apache/rocketmq:5.3.2
    container_name: shortlink-rocketmq-broker
    restart: always
    command: sh mqbroker -n rocketmq:9876 -c /home/rocketmq/rocketmq-5.3.2/conf/broker.conf
    depends_on:
      - rocketmq
    environment:
      - JAVA_OPT_EXT=-Xms512m -Xmx512m
    ports:
      - "10911:10911"
      - "10909:10909"
    volumes:
      - ./rocketmq/conf/broker.conf:/home/rocketmq/rocketmq-5.3.2/conf/broker.conf
      - ./rocketmq/broker/logs:/home/rocketmq/logs
      - ./rocketmq/broker/store:/home/rocketmq/store
    networks:
      - shortlink-network
    deploy:
      resources:
        limits:
          memory: 600m
        reservations:
          memory: 512m

  # RocketMQ Console (可选的管理界面)
  rocketmq-console:
    image: styletang/rocketmq-console-ng:latest
    container_name: shortlink-rocketmq-console
    restart: always
    depends_on:
      - rocketmq
    environment:
      - JAVA_OPTS=-Xmx128m -Xms128m
      - rocketmq.config.namesrvAddr=rocketmq:9876
      - rocketmq.config.isVIPChannel=false
    ports:
      - "8180:8080"
    networks:
      - shortlink-network
    deploy:
      resources:
        limits:
          memory: 200m
        reservations:
          memory: 128m

networks:
  shortlink-network:
    driver: bridge 